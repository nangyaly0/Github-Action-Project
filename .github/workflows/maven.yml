# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  Build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Download and Install ChromeDriver
      run: |
          wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/119.0.6045.159/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip -d $HOME/bin
          chmod +x /home/runner/bin/chromedriver-linux64/chromedriver

    - name: Build with Maven
      run: |
        mvn clean install -X
        
  Test:
    needs: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Download and Install ChromeDriver
      run: |
          wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/119.0.6045.159/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip -d $HOME/bin
          chmod +x /home/runner/bin/chromedriver-linux64/chromedriver
          
    - name: Build with Maven
      run: |
        mvn test -Dtest=unittest

    - name: Show contents of target directory
      run: |
        cat > target/surefire-reports/unittest.txt

  Containerizing-and-push:
    needs: Test
    runs-on: ubuntu-latest

    steps:   
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Log in to Docker Hub
        env:
          username: ${{ secrets.DOCKER_NAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo ${{ env.password }} | docker login -u ${{ env.username }} --password-stdin

      - name: Build the docker image
        run: |
           docker build . -t alikhan0/onlinebookstore:latest -f ./Docker-files/app/Dockerfile
          
      - name: push Docker image
        run: |
          docker push alikhan0/onlinebookstore:latest
    
  Deploy:
    needs: Containerizing-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Python and Ansible
        run: |
          sudo apt-add-repository ppa:ansible/ansible
          sudo apt update
          sudo apt install ansible

      - name: Deploy with Ansible
        run: ansible-playbook -i ip.txt -u "ec2-user" --private-key ~/.ssh/id_rsa ansible-playbook.yml
        env:
          ANSIBLE_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
